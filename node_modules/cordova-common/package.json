{
  "_args": [
    [
      {
        "raw": "brodybits/cordova-common#plist-2-patch",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "brodybits/cordova-common#plist-2-patch",
        "spec": "github:brodybits/cordova-common#plist-2-patch",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:brodybits/cordova-common.git#plist-2-patch",
          "sshUrl": "git+ssh://git@github.com/brodybits/cordova-common.git#plist-2-patch",
          "httpsUrl": "git+https://github.com/brodybits/cordova-common.git#plist-2-patch",
          "gitUrl": "git://github.com/brodybits/cordova-common.git#plist-2-patch",
          "shortcut": "github:brodybits/cordova-common#plist-2-patch",
          "directUrl": "https://raw.githubusercontent.com/brodybits/cordova-common/plist-2-patch/package.json"
        }
      },
      "C:\\Users\\brodybits\\Documents\\cordova\\cordova-windows"
    ]
  ],
  "_from": "brodybits/cordova-common#plist-2-patch",
  "_id": "cordova-common@2.2.5-dev",
  "_inCache": true,
  "_location": "/cordova-common",
  "_phantomChildren": {
    "sax": "0.3.5"
  },
  "_requested": {
    "raw": "brodybits/cordova-common#plist-2-patch",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "brodybits/cordova-common#plist-2-patch",
    "spec": "github:brodybits/cordova-common#plist-2-patch",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:brodybits/cordova-common.git#plist-2-patch",
      "sshUrl": "git+ssh://git@github.com/brodybits/cordova-common.git#plist-2-patch",
      "httpsUrl": "git+https://github.com/brodybits/cordova-common.git#plist-2-patch",
      "gitUrl": "git://github.com/brodybits/cordova-common.git#plist-2-patch",
      "shortcut": "github:brodybits/cordova-common#plist-2-patch",
      "directUrl": "https://raw.githubusercontent.com/brodybits/cordova-common/plist-2-patch/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git://github.com/brodybits/cordova-common.git#ad5c29fe4534bee4c0c4869a03698c90e6e563ff",
  "_shasum": "ed222a7c4512381f6defff6783b9a44e7557d374",
  "_shrinkwrap": null,
  "_spec": "brodybits/cordova-common#plist-2-patch",
  "_where": "C:\\Users\\brodybits\\Documents\\cordova\\cordova-windows",
  "author": {
    "name": "Apache Software Foundation"
  },
  "bugs": {
    "url": "https://issues.apache.org/jira/browse/CB",
    "email": "dev@cordova.apache.org"
  },
  "contributors": [],
  "dependencies": {
    "ansi": "^0.3.1",
    "bplist-parser": "^0.1.0",
    "cordova-registry-mapper": "^1.1.8",
    "elementtree": "0.1.6",
    "glob": "^5.0.13",
    "minimatch": "^3.0.0",
    "plist": "^2.1.0",
    "q": "^1.4.1",
    "shelljs": "^0.5.3",
    "underscore": "^1.8.3",
    "unorm": "^1.3.3"
  },
  "description": "Apache Cordova tools and platforms shared routines",
  "devDependencies": {
    "eslint": "^4.0.0",
    "eslint-config-semistandard": "^11.0.0",
    "eslint-config-standard": "^10.2.1",
    "eslint-plugin-import": "^2.3.0",
    "eslint-plugin-node": "^5.0.0",
    "eslint-plugin-promise": "^3.5.0",
    "eslint-plugin-standard": "^3.0.1",
    "istanbul": "^0.4.5",
    "jasmine": "^2.5.2",
    "osenv": "^0.1.3",
    "promise-matchers": "^0.9.6",
    "rewire": "^2.5.1"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "gitHead": "ad5c29fe4534bee4c0c4869a03698c90e6e563ff",
  "homepage": "https://github.com/apache/cordova-common#readme",
  "license": "Apache-2.0",
  "main": "cordova-common.js",
  "name": "cordova-common",
  "optionalDependencies": {},
  "readme": "<!--\r\n#\r\n# Licensed to the Apache Software Foundation (ASF) under one\r\n# or more contributor license agreements.  See the NOTICE file\r\n# distributed with this work for additional information\r\n# regarding copyright ownership.  The ASF licenses this file\r\n# to you under the Apache License, Version 2.0 (the\r\n# \"License\"); you may not use this file except in compliance\r\n# with the License.  You may obtain a copy of the License at\r\n#\r\n# http://www.apache.org/licenses/LICENSE-2.0\r\n#\r\n# Unless required by applicable law or agreed to in writing,\r\n# software distributed under the License is distributed on an\r\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n#  KIND, either express or implied.  See the License for the\r\n# specific language governing permissions and limitations\r\n# under the License.\r\n#\r\n-->\r\n\r\n[![Build status](https://ci.appveyor.com/api/projects/status/wxkmo0jalsr8gane?svg=true)](https://ci.appveyor.com/project/ApacheSoftwareFoundation/cordova-common/branch/master)\r\n[![Build Status](https://travis-ci.org/apache/cordova-common.svg?branch=master)](https://travis-ci.org/apache/cordova-common)\r\n[![NPM](https://nodei.co/npm/cordova-common.png)](https://nodei.co/npm/cordova-common/)\r\n\r\n# cordova-common\r\nExposes shared functionality used by [cordova-lib](https://github.com/apache/cordova-lib/) and Cordova platforms.\r\n## Exposed APIs\r\n\r\n### `events`\r\n\r\nRepresents special instance of NodeJS EventEmitter which is intended to be used to post events to cordova-lib and cordova-cli\r\n\r\nUsage:\r\n```js\r\nvar events = require('cordova-common').events;\r\nevents.emit('warn', 'Some warning message')\r\n```\r\n\r\nThere are the following events supported by cordova-cli: `verbose`, `log`, `info`, `warn`, `error`.\r\n\r\n### `CordovaError`\r\n\r\nAn error class used by Cordova to throw cordova-specific errors. The CordovaError class is inherited from Error, so CordovaError instances is also valid Error instances (`instanceof` check succeeds).\r\n\r\nUsage:\r\n\r\n```js\r\nvar CordovaError = require('cordova-common').CordovaError;\r\nthrow new CordovaError('Some error message', SOME_ERR_CODE);\r\n```\r\n\r\nSee [CordovaError](src/CordovaError/CordovaError.js) for supported error codes.\r\n\r\n### `ConfigParser`\r\n\r\nExposes functionality to deal with cordova project `config.xml` files. For ConfigParser API reference check [ConfigParser Readme](src/ConfigParser/README.md).\r\n\r\nUsage:\r\n```js\r\nvar ConfigParser = require('cordova-common').ConfigParser;\r\nvar appConfig = new ConfigParser('path/to/cordova-app/config.xml');\r\nconsole.log(appconfig.name() + ':' + appConfig.version());\r\n```\r\n\r\n### `PluginInfoProvider` and `PluginInfo`\r\n\r\n`PluginInfo` is a wrapper for cordova plugins' `plugin.xml` files. This class may be instantiated directly or via `PluginInfoProvider`. The difference is that `PluginInfoProvider` caches `PluginInfo` instances based on plugin source directory.\r\n\r\nUsage:\r\n```js\r\nvar PluginInfo: require('cordova-common').PluginInfo;\r\nvar PluginInfoProvider: require('cordova-common').PluginInfoProvider;\r\n\r\n// The following instances are equal\r\nvar plugin1 = new PluginInfo('path/to/plugin_directory');\r\nvar plugin2 = new PluginInfoProvider().get('path/to/plugin_directory');\r\n\r\nconsole.log('The plugin ' + plugin1.id + ' has version ' + plugin1.version)\r\n```\r\n\r\n### `ActionStack`\r\n\r\nUtility module for dealing with sequential tasks. Provides a set of tasks that are needed to be done and reverts all tasks that are already completed if one of those tasks fail to complete. Used internally by cordova-lib and platform's plugin installation routines.\r\n\r\nUsage:\r\n```js\r\nvar ActionStack = require('cordova-common').ActionStack;\r\nvar stack = new ActionStack()\r\n\r\nvar action1 = stack.createAction(task1, [<task parameters>], task1_reverter, [<reverter_parameters>]);\r\nvar action2 = stack.createAction(task2, [<task parameters>], task2_reverter, [<reverter_parameters>]);\r\n\r\nstack.push(action1);\r\nstack.push(action2);\r\n\r\nstack.process()\r\n.then(function() {\r\n    // all actions succeded\r\n})\r\n.catch(function(error){\r\n    // One of actions failed with error\r\n})\r\n```\r\n\r\n### `superspawn`\r\n\r\nModule for spawning child processes with some advanced logic.\r\n\r\nUsage:\r\n```js\r\nvar superspawn = require('cordova-common').superspawn;\r\nsuperspawn.spawn('adb', ['devices'])\r\n.progress(function(data){\r\n    if (data.stderr)\r\n        console.error('\"adb devices\" raised an error: ' + data.stderr);\r\n})\r\n.then(function(devices){\r\n    // Do something...\r\n})\r\n```\r\n\r\n### `xmlHelpers`\r\n\r\nA set of utility methods for dealing with XML files.\r\n\r\nUsage:\r\n```js\r\nvar xml = require('cordova-common').xmlHelpers;\r\n\r\nvar xmlDoc1 = xml.parseElementtreeSync('some/xml/file');\r\nvar xmlDoc2 = xml.parseElementtreeSync('another/xml/file');\r\n\r\nxml.mergeXml(doc1, doc2); // doc2 now contains all the nodes from doc1\r\n```\r\n\r\n### Other APIs\r\n\r\nThe APIs listed below are also exposed but are intended to be only used internally by cordova plugin installation routines.\r\n\r\n```\r\nPlatformJson\r\nConfigChanges\r\nConfigKeeper\r\nConfigFile\r\nmungeUtil\r\n```\r\n\r\n## Setup\r\n* Clone this repository onto your local machine\r\n    `git clone https://github.com/apache/cordova-common.git`\r\n* Navigate to cordova-common directory, install dependencies and npm-link\r\n    `cd cordova-common && npm install && npm link`\r\n* Navigate to cordova-lib directory and link cordova-common\r\n    `cd <cordova-lib directory> && npm link cordova-common && npm install`\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/apache/cordova-common.git"
  },
  "scripts": {
    "cover": "istanbul cover --root src --print detail jasmine",
    "eslint": "eslint src spec",
    "jasmine": "jasmine JASMINE_CONFIG_PATH=spec/support/jasmine.json",
    "test": "npm run eslint && npm run jasmine"
  },
  "version": "2.2.5-dev"
}
